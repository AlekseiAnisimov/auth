// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BearerAuthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BearerAuthRequest) Reset()         { *m = BearerAuthRequest{} }
func (m *BearerAuthRequest) String() string { return proto.CompactTextString(m) }
func (*BearerAuthRequest) ProtoMessage()    {}
func (*BearerAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{0}
}

func (m *BearerAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BearerAuthRequest.Unmarshal(m, b)
}
func (m *BearerAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BearerAuthRequest.Marshal(b, m, deterministic)
}
func (m *BearerAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BearerAuthRequest.Merge(m, src)
}
func (m *BearerAuthRequest) XXX_Size() int {
	return xxx_messageInfo_BearerAuthRequest.Size(m)
}
func (m *BearerAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BearerAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BearerAuthRequest proto.InternalMessageInfo

type BearerAuthResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BearerAuthResponse) Reset()         { *m = BearerAuthResponse{} }
func (m *BearerAuthResponse) String() string { return proto.CompactTextString(m) }
func (*BearerAuthResponse) ProtoMessage()    {}
func (*BearerAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{1}
}

func (m *BearerAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BearerAuthResponse.Unmarshal(m, b)
}
func (m *BearerAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BearerAuthResponse.Marshal(b, m, deterministic)
}
func (m *BearerAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BearerAuthResponse.Merge(m, src)
}
func (m *BearerAuthResponse) XXX_Size() int {
	return xxx_messageInfo_BearerAuthResponse.Size(m)
}
func (m *BearerAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BearerAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BearerAuthResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*BearerAuthRequest)(nil), "auth.BearerAuthRequest")
	proto.RegisterType((*BearerAuthResponse)(nil), "auth.BearerAuthResponse")
}

func init() { proto.RegisterFile("proto/auth.proto", fileDescriptor_a9d38a2cdbb4f144) }

var fileDescriptor_a9d38a2cdbb4f144 = []byte{
	// 115 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x2c, 0x2d, 0xc9, 0xd0, 0x03, 0x33, 0x85, 0x58, 0x40, 0x6c, 0x25, 0x61, 0x2e,
	0x41, 0xa7, 0xd4, 0xc4, 0xa2, 0xd4, 0x22, 0xc7, 0xd2, 0x92, 0x8c, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4,
	0xe2, 0x12, 0x25, 0x11, 0x2e, 0x21, 0x64, 0xc1, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x23, 0x0f,
	0x2e, 0x6e, 0x10, 0x3f, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x92, 0x8b, 0xc9, 0x25,
	0x5f, 0x48, 0x5c, 0x0f, 0x6c, 0x24, 0x86, 0x19, 0x52, 0x12, 0x98, 0x12, 0x10, 0x73, 0x94, 0x18,
	0x92, 0xd8, 0xc0, 0x2e, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x71, 0x6f, 0x0b, 0x95,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Do(ctx context.Context, in *BearerAuthRequest, opts ...grpc.CallOption) (*BearerAuthResponse, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Do(ctx context.Context, in *BearerAuthRequest, opts ...grpc.CallOption) (*BearerAuthResponse, error) {
	out := new(BearerAuthResponse)
	err := c.cc.Invoke(ctx, "/auth.AuthService/Do", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Do(context.Context, *BearerAuthRequest) (*BearerAuthResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Do(ctx context.Context, req *BearerAuthRequest) (*BearerAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Do not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Do_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BearerAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Do(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthService/Do",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Do(ctx, req.(*BearerAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Do",
			Handler:    _AuthService_Do_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auth.proto",
}
